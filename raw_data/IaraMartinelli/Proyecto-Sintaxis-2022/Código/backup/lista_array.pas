unit lista_array;

{$mode objfpc}{$H+}

interface

uses
  base;
PROCEDURE RECUPERAR2 (VAR L:t_produccion; POSICION: BYTE; VAR X:Tsimbgram);

implementation
{PROCEDURE CREAR2 (VAR L:t_produccion);
BEGIN
L.cant:= 0;
END;  }
PROCEDURE RECUPERAR2 (VAR L:t_produccion; POSICION:integer; VAR X:Tsimbgram);
BEGIN
X:= L.elem[POSICION]
END;
{PROCEDURE AGREGAR2 (VAR L:t_produccion; X:T_DATO);
BEGIN
INC(L.TAM);
L.ELEM[L.TAM]:= X;
END;
FUNCTION LISTA_LLENA (VAR L:t_produccion): BOOLEAN;
BEGIN
LISTA_LLENA:= L.TAM = N;
END;
FUNCTION LISTA_VACIA (VAR L:t_produccion): BOOLEAN;
BEGIN
LISTA_VACIA:= L.TAM = 0;
END;
FUNCTION TAMANIO (VAR L:t_produccion):BYTE;
BEGIN
TAMANIO:= L.TAM;
END;
PROCEDURE DESPLAZAR (VAR L:t_produccion; POSICION:BYTE);
VAR
I:BYTE;
BEGIN
FOR I:= POSICION TO L.TAM - 1 DO
L.ELEM[I] := L.ELEM[I+1];
END;
PROCEDURE ELIMINAR (VAR L:t_produccion; POSICION:BYTE; VAR X:T_DATO);
BEGIN
X:= L.ELEM[POSICION];
IF POSICION <> TAMANIO(L) THEN DESPLAZAR(L,POSICION); //SI EL ELEMENTO QUE SE ELIMINÓ ESTÁ AL PRINCIPIO O AL MEDIO
DEC(L.TAM);
END;
PROCEDURE MODIFICA (VAR L:t_produccion; POSICION:BYTE; Z:T_DATO);
BEGIN
L.ELEM[POSICION]:= Z;
END;  }

end.

